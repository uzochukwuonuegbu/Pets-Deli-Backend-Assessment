service: pets-deli
description: An Assessment for a backend engineer role by Pets Deli

custom:
  accountId: ${ file(serverless.env.yml):${self:custom.stage}.ACCOUNT_ID }
  stage: ${opt:stage, self:provider.stage}
  tableThroughputs:
    prod: 30
    staging: 5
    dev: 1
  webpack:
    includeModules:
      forceExclude:
        - aws-sdk
  DataTableName: ${self:service}-${self:provider.stage}-data
  pseudoParameters:
    skipRegionReplace: false
  dynamodb:
    start:
      port: 8000
      dbPath: './.dynamodb'
      migrate: true
      seed: true
    stages:
      - ${self:provider.stage}
  prune:
    automatic: true
    number: 5

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-central-1
  # profile: dev
  environment: ${file(serverless.env.yml):${self:custom.stage}, file(serverless.env.yml):default}
  apiKeys:
    - WEB_API_KEY_${self:custom.stage}
  ManagedPolicyArns:
    - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - 's3:*'
        - 'lambda:InvokeFunction'
        - iot:*
        - sqs:*
      Resource: '*'

functions:
  onClickEvent:
    handler: src/handler/onClickEvents.CreateOnClickEvent
    events:
      - http:
          path: onClick
          method: post
          cors: 
            origin: "*"
            allowCredentials: false # required for Authorization to be set to Cognito User Pool
            headers:
              - Access-Control-Allow-Origin
              - Authorization
              - Content-Type
              - X-Amz-Date
              - X-Amz-Security-Token
              - x-api-key
          private: true
          warmup: true
          timeout: 30
  userClickEvents:
    handler: src/handler/onClickEvents.GetUserClickEvents
    events:
      - http:
          path: onClick
          method: get
          cors: 
            origin: "*"
            allowCredentials: false # required for Authorization to be set to Cognito User Pool
            headers:
              - Access-Control-Allow-Origin
              - Authorization
              - Content-Type
              - X-Amz-Date
              - X-Amz-Security-Token
              - x-api-key
          private: true
          warmup: true
          timeout: 30
Outputs:
  Region:
    Value:
      Ref: 'AWS::Region'

resources:
  - ${file(resources/dataTable.yml)}

plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-pseudo-parameters
  - serverless-cognito-add-custom-attributes
  - serverless-prune-plugin
